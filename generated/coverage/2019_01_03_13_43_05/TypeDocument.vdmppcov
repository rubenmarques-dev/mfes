class TypeDocument
types
Type = seq of char;
Price = nat1;
values
instance variables
	private tipos : map Type to Price :=  { "Cor" |-> 9, "PB" |-> 5};
	
operations

-- get all clients
	pure public getTipos : () ==> map Type to Price
		getTipos() ==
		return tipos;
	
	pure public getDomain: () ==> set of seq of char
		getDomain() ==
		return dom tipos;
	
	pure public getRange: () ==> set of nat1
		getRange() ==
		return rng tipos;
	
	public getPrice: seq of char ==> nat1
		getPrice(type) ==
			return tipos(type);
		
		
	
	
functions
-- TODO Define functiones here
traces

-- TODO Define Combinatorial Test Traces here
end TypeDocument